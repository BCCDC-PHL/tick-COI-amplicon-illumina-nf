manifest {
  author = 'connor-lab: Matt Bull, Sendu Bala. BCCDC-PHL: Dan Fornika, oicr-gsi: Jared Simpson, Michael Laszloffy; adapted by: Adriana Cabrera (BCCDC-PHL)'
  description = 'Nextflow for tick COI (cytochrome oxidase) amplicon sequencing'
  mainScript = 'main.nf'
  nextflowVersion = '>=20.01.0'
  version = '0.1.0'
}

def makeFastqSearchPath ( illuminaSuffixes, fastq_exts ) {
    if ( params.directory ) {
      def fastq_searchpath = []
      for (item in illuminaSuffixes){
          for(thing in fastq_exts){
              fastq_searchpath.add(params.directory.toString() + '/**' + item.toString() + thing.toString())
          }
      }
      return fastq_searchpath
    }
}

params {

  illuminaSuffixes = ['*_R{1,2}_001', '*_R{1,2}', '*_{1,2}' ]
  fastq_exts = ['.fastq.gz', '.fq.gz']
  fastqSearchPath = makeFastqSearchPath( params.illuminaSuffixes, params.fastq_exts )

  // Boilerplate options
  cache = ""
  directory = false
  prefix = false
  ref = false
  ref_with_primers = false
  bed = false
  kraken_db = '/data/ref_databases/kraken2/latest_standard'
  ncbi_db = '/data/ref_databases/blast/nt/latest_nt'
  //gff = 'NO_FILE'
  primer_pairs_tsv = 'NO_FILE'
  profile = false
  help = false
  outdir = './results'
  tracedir = "${params.outdir}/pipeline_info"
  
  // host filtering
  composite_ref = false
  viral_contig_name = 'BUICD2216-23'

  // Sliding window quality threshold 
  //qualThreshold = 20

  // length of filter sequences after denovoAssembly
  length = 600
  
  // subsample number of reads
  subsampleReads = 1000

  // number of maximum target sequences as output using blast
  max_target_seqs_blast = 100

  // Minimum coverage depth to call variant
  varMinDepth = 10

}

profiles {
  conda {
     process.conda = "$baseDir/environments/environment.yml"
     conda.useMamba = true
     enabled = true
     conda.createTimeout = '1 h'
     if (params.cache) {
       conda.cacheDir = params.cache
     }
  }
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

process {
  withLabel: largecpu {
    cpus = 8
  }

  withName: makeQCCSV {
    conda = "$baseDir/environments/extras.yml"
  }

  withName: kraken2Reports { 
    cpus = 8 
    conda = "$baseDir/environments/kraken2.yml"
    memory = '64 GB'
  }

  withName: removeBacterialReads {
    conda = "$baseDir/environments/extras.yml"
  }

  withName: subsample {
    conda = "$baseDir/environments/extras.yml"
  }

  withName: denovoAssembly {
    conda = "$baseDir/environments/extras.yml"
  }

  withName: blastSpeciesID {
    conda = "$baseDir/environments/blast_env.yml"
  }
  withName: ncbiBlast {
    conda = "$baseDir/environments/blast_env.yml"
  }
}

timeline {
  enabled = false
  file = "${params.tracedir}/execution_timeline.html"
}
report {
  enabled = false
  file = "${params.tracedir}/execution_report.html"
}
trace {
  enabled = false
  file = "${params.tracedir}/execution_trace.txt"
}
dag {
  enabled = false
  file = "${params.tracedir}/pipeline_dag.svg"
}
